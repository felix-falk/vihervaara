filter(hemin %in% c("0min", "15min", "30min", "60min", "24h", "48h")) %>%
group_by(seq, hemin) %>%
do({
model <- lm(log10(distance) ~ enhancer_density, data = .)
aov_res <- summary(aov(model))
p_value <- aov_res[[1]]["enhancer_density", "Pr(>F)"]
r_squared <- summary(model)$r.squared
data.frame(p_value = p_value, r_squared = r_squared)
}) %>%
ungroup() %>%
mutate(
hemin = factor(hemin, levels = c("0min", "15min", "30min", "60min", "24h", "48h")),  # ensure factor also here
label = paste0("R² = ", round(r_squared, 3), "\np = ", format.pval(p_value, digits = 3))
)
# Now plot
ggplot(chiapet_connections %>%
mutate(hemin = factor(hemin, levels = c("0min", "15min", "30min", "60min", "24h", "48h"))) %>%
filter(hemin %in% c("0min", "15min", "30min", "60min", "24h", "48h")),
aes(x = enhancer_density, y = log10(distance))) +
geom_point() +  # Scatter points
geom_smooth(method = "lm", se = TRUE, color = "grey30") +  # Linear regression line
labs(title = "Distance vs Enhancer REX-motif Density",
x = "Enhancer REX-motif Density",
y = "log10(Distance)") +
facet_grid(seq ~ hemin) +  # Facet by seq (rows) and hemin (columns)
theme_minimal() +
geom_text(
data = stats,
aes(x = Inf, y = Inf, label = label),
hjust = 1.1, vjust = 1.1, inherit.aes = FALSE
)
# REX density in PROMOTERS for HEMIN DATA
# Calculate AOV p-value and R-squared for each combination of seq and hemin
stats <- chiapet_connections %>%
mutate(hemin = factor(hemin, levels = c("0min", "15min", "30min", "60min", "24h", "48h"))) %>%
filter(hemin %in% c("0min", "15min", "30min", "60min", "24h", "48h")) %>%
group_by(seq, hemin) %>%
do({
model <- lm(log10(distance) ~ promoter_density, data = .)
aov_res <- summary(aov(model))
p_value <- aov_res[[1]]["promoter_density", "Pr(>F)"]
r_squared <- summary(model)$r.squared
data.frame(p_value = p_value, r_squared = r_squared)
}) %>%
ungroup() %>%
mutate(
label = paste0("R² = ", round(r_squared, 3), "\np = ", format.pval(p_value, digits = 3))
)
# Plot
ggplot(chiapet_connections %>%
mutate(hemin = factor(hemin, levels = c("0min", "15min", "30min", "60min", "24h", "48h"))) %>%
filter(hemin %in% c("0min", "15min", "30min", "60min", "24h", "48h")),
aes(x = promoter_density, y = log10(distance))) +
geom_point(alpha = 0.5) +  # Scatter points
geom_smooth(method = "lm", se = TRUE, color = "grey30") +  # Linear regression line
labs(title = "Distance vs Promoter Density",
x = "Promoter Density",
y = "log10(Distance)") +
facet_grid(seq ~ hemin) +  # Facet by seq (rows) and hemin (columns)
theme_minimal() +
geom_text(
data = stats,
aes(x = Inf, y = Inf, label = label),
hjust = 1.1, vjust = 1.1, inherit.aes = FALSE)
# HEMIN Histogram Plot
ggplot(chiapet_connections, aes(x = log10(distance))) +
geom_histogram(binwidth = 0.1, position = "dodge") +
labs(title = "Distance by Sequencing Method and Hemin Treatment",
x = "log10(Promoter-Enhancer Distance)",
y = "Count") +
theme_minimal() +
facet_grid(seq ~ hemin) +
theme(legend.position = "none") +
geom_text(data = chiapet_connections %>% group_by(seq, hemin) %>% summarise(n = n(), .groups = "drop"), aes(x = Inf, y = Inf, label = paste("n =", n)),
inherit.aes = FALSE, hjust = 1.1, vjust = 1.5)
# HEMIN Histogram Plot
ggplot(chiapet_connections %>%
mutate(hemin = factor(hemin, levels = c("0min", "15min", "30min", "60min", "24h", "48h"))) %>%
filter(hemin %in% c("0min", "15min", "30min", "60min", "24h", "48h")), aes(x = log10(distance))) +
geom_histogram(binwidth = 0.1, position = "dodge") +
labs(title = "Distance by Sequencing Method and Hemin Treatment",
x = "log10(Promoter-Enhancer Distance)",
y = "Count") +
theme_minimal() +
facet_grid(seq ~ hemin) +
theme(legend.position = "none") +
geom_text(data = chiapet_connections %>% group_by(seq, hemin) %>% summarise(n = n(), .groups = "drop"), aes(x = Inf, y = Inf, label = paste("n =", n)),
inherit.aes = FALSE, hjust = 1.1, vjust = 1.5)
# HEMIN Histogram Plot
ggplot(chiapet_connections %>%
filter(hemin %in% c("0min", "15min", "30min", "60min", "24h", "48h")), aes(x = log10(distance))) +
geom_histogram(binwidth = 0.1, position = "dodge") +
labs(title = "Distance by Sequencing Method and Hemin Treatment",
x = "log10(Promoter-Enhancer Distance)",
y = "Count") +
theme_minimal() +
facet_grid(seq ~ hemin) +
theme(legend.position = "none") +
geom_text(data = chiapet_connections %>% group_by(seq, hemin) %>% summarise(n = n(), .groups = "drop"), aes(x = Inf, y = Inf, label = paste("n =", n)),
inherit.aes = FALSE, hjust = 1.1, vjust = 1.5)
View(chiapet_connections)
# HEMIN Histogram Plot
ggplot(chiapet_connections %>%
filter(hemin %in% c("0min", "15min", "30min", "60min", "24h", "48h")), aes(x = log10(distance))) +
geom_histogram(binwidth = 0.1, position = "dodge") +
labs(title = "Distance by Sequencing Method and Hemin Treatment",
x = "log10(Promoter-Enhancer Distance)",
y = "Count") +
theme_minimal() +
facet_grid(seq ~ hemin) +
theme(legend.position = "none") +
geom_text(data = chiapet_connections %>% filter(hemin %in% c("0min", "15min", "30min", "60min", "24h", "48h")) %>% group_by(seq, hemin) %>% summarise(n = n(), .groups = "drop"), aes(x = Inf, y = Inf, label = paste("n =", n)),
inherit.aes = FALSE, hjust = 1.1, vjust = 1.5)
# HEMIN Histogram Plot
ggplot(chiapet_connections %>%
filter(hemin %in% c("0min", "15min", "30min", "60min", "24h", "48h")),
aes(x = log10(distance))) +
geom_histogram(binwidth = 0.1, position = "dodge") +
labs(title = "Distance by Sequencing Method and Hemin Treatment",
x = "log10(Promoter-Enhancer Distance)",
y = "Count") +
theme_minimal() +
facet_grid(seq ~ hemin) +
theme(legend.position = "none") +
geom_text(data = chiapet_connections %>%
filter(hemin %in% c("0min", "15min", "30min", "60min", "24h", "48h")) %>%
group_by(seq, hemin) %>%
summarise(n = n(), .groups = "drop"), aes(x = Inf, y = Inf, label = paste("n =", n)),
inherit.aes = FALSE, hjust = 1.1, vjust = 1.5)
chiapet_connections %>%
filter(hemin %in% c("0min", "15min", "30min", "60min", "24h", "48h")) %>%
mutate(hemin = factor(hemin, levels = c("0min", "15min", "30min", "60min", "24h", "48h"))) %>%
ggplot(aes(x = log10(distance))) +
geom_histogram(binwidth = 0.1) +
facet_grid(seq ~ hemin) +
geom_text(data = ~ .x %>% count(seq, hemin, name = "n"),
aes(x = Inf, y = Inf, label = paste("n =", n)),
inherit.aes = FALSE, hjust = 1.1, vjust = 1.5) +
labs(title = "Distance by Sequencing Method and Hemin Treatment",
x = "log10(Promoter-Enhancer Distance)", y = "Count") +
theme_minimal() +
theme(legend.position = "none")
data <- chiapet_connections %>%
filter(grepl("eClusters|heatshock", hemin)) %>%
mutate(features_category = factor(case_when(
grepl("Nhs", feature) ~ "Nhs",
grepl("HS", feature) ~ "HS",
grepl("both", feature) ~ "both",
TRUE ~ "enhancer clusters"
), levels = c("Nhs", "HS", "both", "enhancer clusters")))
ggplot(data, aes(x = log10(distance))) +
geom_histogram(binwidth = 0.1) +
facet_wrap(~features_category, nrow = 1) +
geom_text(data = count(data, features_category) %>%
mutate(label = paste0("n = ", n)),
aes(x = Inf, y = Inf, label = label),
inherit.aes = FALSE, hjust = 1.1, vjust = 1.1) +
labs(title = "Distance by Sequencing Method and Data Set",
x = "log10(Promoter-Enhancer Distance)", y = "Count") +
theme_minimal(base_size = 10) + theme(legend.position = "none")
# HEMIN Histogram Plot
chiapet_connections %>%
filter(hemin %in% c("0min", "15min", "30min", "60min", "24h", "48h")) %>%
mutate(hemin = factor(hemin, levels = c("0min", "15min", "30min", "60min", "24h", "48h"))) %>%
ggplot(aes(x = log10(distance))) +
geom_histogram(binwidth = 0.1) +
facet_grid(seq ~ hemin) +
geom_text(data = ~ .x %>% count(seq, hemin, name = "n"),
aes(x = Inf, y = Inf, label = paste("n =", n)),
inherit.aes = FALSE, hjust = 1.1, vjust = 1.5) +
labs(title = "Distance by Sequencing Method and Hemin Treatment",
x = "log10(Promoter-Enhancer Distance)", y = "Count") +
theme_minimal() +
theme(legend.position = "none")
# HEMIN Histogram Plot
chiapet_connections %>%
filter(hemin %in% c("0min", "15min", "30min", "60min", "24h", "48h")) %>%
mutate(hemin = factor(hemin, levels = c("0min", "15min", "30min", "60min", "24h", "48h"))) %>%
ggplot(aes(x = log10(distance))) +
geom_histogram(binwidth = 0.1) +
facet_grid(seq ~ hemin) +
geom_text(data = ~ .x %>% count(seq, hemin, name = "n"),
aes(x = Inf, y = Inf, label = paste("n =", n)),
inherit.aes = FALSE, hjust = 1.1, vjust = 1.5) +
labs(x = "log10(Promoter-Enhancer Distance)", y = "Count") +
theme_minimal() +
theme(legend.position = "none")
# eClusters and HS histogram plot
data <- chiapet_connections %>%
filter(grepl("eClusters|heatshock", hemin)) %>%
mutate(features_category = factor(case_when(
grepl("Nhs", feature) ~ "Nhs",
grepl("HS", feature) ~ "HS",
grepl("both", feature) ~ "both",
TRUE ~ "enhancer clusters"
), levels = c("Nhs", "HS", "both", "enhancer clusters")))
ggplot(data, aes(x = log10(distance))) +
geom_histogram(binwidth = 0.1) +
facet_wrap(~features_category, nrow = 1) +
geom_text(data = count(data, features_category) %>%
mutate(label = paste0("n = ", n)),
aes(x = Inf, y = Inf, label = label),
inherit.aes = FALSE, hjust = 1.1, vjust = 1.1) +
labs(x = "log10(Promoter-Enhancer Distance)", y = "Count") +
theme_minimal(base_size = 10) + theme(legend.position = "none")
library(ggplot2)
library(dplyr)
library(broom)
FANTOM5_0min <- read.delim("~/Documents/Vihervaara/hg19/cage-seq/FANTOM5_K562_0min.bed", header=FALSE)
FANTOM5_15min <- read.delim("~/Documents/Vihervaara/hg19/cage-seq/FANTOM5_K562_15min.bed", header=FALSE)
FANTOM5_30min <- read.delim("~/Documents/Vihervaara/hg19/cage-seq/FANTOM5_K562_30min.bed", header=FALSE)
FANTOM5_60min <- read.delim("~/Documents/Vihervaara/hg19/cage-seq/FANTOM5_K562_60min.bed", header=FALSE)
FANTOM5_24h <- read.delim("~/Documents/Vihervaara/hg19/cage-seq/FANTOM5_K562_1440min.bed", header=FALSE)
FANTOM5_48h <- read.delim("~/Documents/Vihervaara/hg19/cage-seq/FANTOM5_K562_2880min.bed", header=FALSE)
overlap_0min <- read.delim("~/Documents/Vihervaara/hg19/overlapping_enhancers_He_0_min.bed", header=FALSE)
overlap_15min <- read.delim("~/Documents/Vihervaara/hg19/overlapping_enhancers_He_15_min.bed", header=FALSE)
overlap_30min <- read.delim("~/Documents/Vihervaara/hg19/overlapping_enhancers_He_30_min.bed", header=FALSE)
overlap_60min <- read.delim("~/Documents/Vihervaara/hg19/overlapping_enhancers_He_60_min.bed", header=FALSE)
overlap_24h <- read.delim("~/Documents/Vihervaara/hg19/overlapping_enhancers_He_24h.bed", header=FALSE)
overlap_48h <- read.delim("~/Documents/Vihervaara/hg19/overlapping_enhancers_He_48h.bed", header=FALSE)
PRO_He0_eRPK <- read.delim("~/Documents/Vihervaara/hg19/enhancers/He0_eRPK.bed", header=FALSE)
PRO_He15_eRPK <- read.delim("~/Documents/Vihervaara/hg19/enhancers/He15_eRPK.bed", header=FALSE)
PRO_He30_eRPK <- read.delim("~/Documents/Vihervaara/hg19/enhancers/He30_eRPK.bed", header=FALSE)
PRO_He60_eRPK <- read.delim("~/Documents/Vihervaara/hg19/enhancers/He60_eRPK.bed", header=FALSE)
PRO_He24h_eRPK <- read.delim("~/Documents/Vihervaara/hg19/enhancers/He24h_eRPK.bed", header=FALSE)
PRO_He48h_eRPK <- read.delim("~/Documents/Vihervaara/hg19/enhancers/He48h_eRPK.bed", header=FALSE)
FANTOM5_0min <- FANTOM5_0min %>% mutate(V3 - V2)
FANTOM5_15min <- FANTOM5_15min %>% mutate(V3 - V2)
FANTOM5_30min <- FANTOM5_30min %>% mutate(V3 - V2)
FANTOM5_60min <- FANTOM5_60min %>% mutate(V3 - V2)
FANTOM5_24h <- FANTOM5_24h %>% mutate(V3 - V2)
FANTOM5_48h <- FANTOM5_48h %>% mutate(V3 - V2)
overlap_0min <- overlap_0min %>% mutate(V3 - V2)
overlap_15min <- overlap_15min %>% mutate(V3 - V2)
overlap_30min <- overlap_30min %>% mutate(V3 - V2)
overlap_60min <- overlap_60min %>% mutate(V3 - V2)
overlap_24h <- overlap_24h %>% mutate(V3 - V2)
overlap_48h <- overlap_48h %>% mutate(V3 - V2)
PRO_He0_eRPK <- PRO_He0_eRPK %>% mutate(V3 - V2)
PRO_He15_eRPK <- PRO_He15_eRPK %>% mutate(V3 - V2)
PRO_He30_eRPK <- PRO_He30_eRPK %>% mutate(V3 - V2)
PRO_He60_eRPK <- PRO_He60_eRPK %>% mutate(V3 - V2)
PRO_He24h_eRPK <- PRO_He24h_eRPK %>% mutate(V3 - V2)
PRO_He48h_eRPK <- PRO_He48h_eRPK %>% mutate(V3 - V2)
FANTOM5_0min <- FANTOM5_0min %>% mutate(time = "0 min", seq = "CAGE")
FANTOM5_15min <- FANTOM5_15min %>% mutate(time = "15 min", seq = "CAGE")
FANTOM5_30min <- FANTOM5_30min %>% mutate(time = "30 min", seq = "CAGE")
FANTOM5_60min <- FANTOM5_60min %>% mutate(time = "60 min", seq = "CAGE")
FANTOM5_24h <- FANTOM5_24h %>% mutate(time = "24 h", seq = "CAGE")
FANTOM5_48h <- FANTOM5_48h %>% mutate(time = "48 h", seq = "CAGE")
overlap_0min <- overlap_0min %>% mutate(time = "0 min", seq = "both")
overlap_15min <- overlap_15min %>% mutate(time = "15 min", seq = "both")
overlap_30min <- overlap_30min %>% mutate(time = "30 min", seq = "both")
overlap_60min <- overlap_60min %>% mutate(time = "60 min", seq = "both")
overlap_24h <- overlap_24h %>% mutate(time = "24 h", seq = "both")
overlap_48h <- overlap_48h %>% mutate(time = "48 h", seq = "both")
PRO_He0_eRPK <- PRO_He0_eRPK %>% mutate(time = "0 min", seq = "PRO")
PRO_He15_eRPK <- PRO_He15_eRPK %>% mutate(time = "15 min", seq = "PRO")
PRO_He30_eRPK <- PRO_He30_eRPK %>% mutate(time = "30 min", seq = "PRO")
PRO_He60_eRPK <- PRO_He60_eRPK %>% mutate(time = "60 min", seq = "PRO")
PRO_He24h_eRPK <- PRO_He24h_eRPK %>% mutate(time = "24 h", seq = "PRO")
PRO_He48h_eRPK <- PRO_He48h_eRPK %>% mutate(time = "48 h", seq = "PRO")
colnames(PRO_He0_eRPK) <- c("chr", "eStart", "eEnd", "RPK", "length", "time", "seq")
colnames(PRO_He15_eRPK) <- c("chr", "eStart", "eEnd", "RPK", "length", "time", "seq")
colnames(PRO_He30_eRPK) <- c("chr", "eStart", "eEnd", "RPK", "length", "time", "seq")
colnames(PRO_He60_eRPK) <- c("chr", "eStart", "eEnd", "RPK", "length", "time", "seq")
colnames(PRO_He24h_eRPK) <- c("chr", "eStart", "eEnd", "RPK", "length", "time", "seq")
colnames(PRO_He48h_eRPK) <- c("chr", "eStart", "eEnd", "RPK", "length", "time", "seq")
colnames(FANTOM5_0min) <- c("chr", "eStart", "eEnd", "RPK", "length", "time", "seq")
colnames(FANTOM5_15min) <- c("chr", "eStart", "eEnd", "RPK", "length", "time", "seq")
colnames(FANTOM5_30min) <- c("chr", "eStart", "eEnd", "RPK", "length", "time", "seq")
colnames(FANTOM5_60min) <- c("chr", "eStart", "eEnd", "RPK", "length", "time", "seq")
colnames(FANTOM5_24h) <- c("chr", "eStart", "eEnd", "RPK", "length", "time", "seq")
colnames(FANTOM5_48h) <- c("chr", "eStart", "eEnd", "RPK", "length", "time", "seq")
colnames(overlap_0min) <- c("chr_CAGE_seq", "eStart_CAGE_seq", "eEnd_CAGE_seq",
"RPK_CAGE_seq", "chr_PRO_seq", "eStart_PRO_seq",
"eEnd_PRO_seq", "name_PRO_seq", "RPK_PRO_seq",
"length_CAGE_seq", "time", "seq")
colnames(overlap_15min) <- c("chr_CAGE_seq", "eStart_CAGE_seq", "eEnd_CAGE_seq",
"RPK_CAGE_seq", "chr_PRO_seq", "eStart_PRO_seq",
"eEnd_PRO_seq", "name_PRO_seq", "RPK_PRO_seq",
"length_CAGE_seq", "time", "seq")
colnames(overlap_30min) <- c("chr_CAGE_seq", "eStart_CAGE_seq", "eEnd_CAGE_seq",
"RPK_CAGE_seq", "chr_PRO_seq", "eStart_PRO_seq",
"eEnd_PRO_seq", "name_PRO_seq", "RPK_PRO_seq",
"length_CAGE_seq", "time", "seq")
colnames(overlap_60min) <- c("chr_CAGE_seq", "eStart_CAGE_seq", "eEnd_CAGE_seq",
"RPK_CAGE_seq", "chr_PRO_seq", "eStart_PRO_seq",
"eEnd_PRO_seq", "name_PRO_seq", "RPK_PRO_seq",
"length_CAGE_seq", "time", "seq")
colnames(overlap_24h) <- c("chr_CAGE_seq", "eStart_CAGE_seq", "eEnd_CAGE_seq",
"RPK_CAGE_seq", "chr_PRO_seq", "eStart_PRO_seq",
"eEnd_PRO_seq", "name_PRO_seq", "RPK_PRO_seq",
"length_CAGE_seq", "time", "seq")
colnames(overlap_48h) <- c("chr_CAGE_seq", "eStart_CAGE_seq", "eEnd_CAGE_seq",
"RPK_CAGE_seq", "chr_PRO_seq", "eStart_PRO_seq",
"eEnd_PRO_seq", "name_PRO_seq", "RPK_PRO_seq",
"length_CAGE_seq", "time", "seq")
overlapping_enhancers <- bind_rows(overlap_0min, overlap_15min, overlap_30min, overlap_60min, overlap_24h, overlap_48h)
# Prepare the data
df <- overlapping_enhancers %>%
mutate(
time = factor(time, levels = c("0 min", "15 min", "30 min", "60 min", "24 h", "48 h")),
log_CAGE = log10(RPK_CAGE_seq),
log_PRO = log10(RPK_PRO_seq)
)
# Fit models and calculate R-squared AND AOV p-value per time group
stats_labels <- df %>%
group_by(time) %>%
do({
model = lm(log_PRO ~ log_CAGE, data = .)
r2 = summary(model)$r.squared
p_value = anova(model)$`Pr(>F)`[1]
# Format p-value
p_value_formatted <- ifelse(p_value < 0.001, "< 0.001", signif(p_value, 3))
data.frame(r2 = r2, p_value = p_value_formatted)
}) %>%
ungroup() %>%
mutate(
label = paste0("R² = ", round(r2, 3), "\n", "p = ", p_value),  # combine R² and p-value
x = Inf,
y = Inf
)
# Now plot
ggplot(df, aes(x = log_CAGE, y = log_PRO)) +
geom_point() +
geom_smooth(method = "lm", se = TRUE, color = "grey30") +
geom_text(
data = stats_labels,
aes(x = x, y = y, label = label),
hjust = 1.1, vjust = 1.1, inherit.aes = FALSE
) +
facet_wrap(~ time, nrow = 2) +
theme_minimal() +
labs(
x = "log10(CAGE-seq RPK)",
y = "log10(PRO-seq RPK)",
title = "Shared Enhancers, Hemin Treatments"
)
library(ggplot2)
library(dplyr)
library(broom)
FANTOM5_0min <- read.delim("~/Documents/Vihervaara/hg19/cage-seq/FANTOM5_K562_0min.bed", header=FALSE)
FANTOM5_15min <- read.delim("~/Documents/Vihervaara/hg19/cage-seq/FANTOM5_K562_15min.bed", header=FALSE)
FANTOM5_30min <- read.delim("~/Documents/Vihervaara/hg19/cage-seq/FANTOM5_K562_30min.bed", header=FALSE)
FANTOM5_60min <- read.delim("~/Documents/Vihervaara/hg19/cage-seq/FANTOM5_K562_60min.bed", header=FALSE)
FANTOM5_24h <- read.delim("~/Documents/Vihervaara/hg19/cage-seq/FANTOM5_K562_1440min.bed", header=FALSE)
FANTOM5_48h <- read.delim("~/Documents/Vihervaara/hg19/cage-seq/FANTOM5_K562_2880min.bed", header=FALSE)
overlap_0min <- read.delim("~/Documents/Vihervaara/hg19/overlapping_enhancers_He_0_min.bed", header=FALSE)
overlap_15min <- read.delim("~/Documents/Vihervaara/hg19/overlapping_enhancers_He_15_min.bed", header=FALSE)
overlap_30min <- read.delim("~/Documents/Vihervaara/hg19/overlapping_enhancers_He_30_min.bed", header=FALSE)
overlap_60min <- read.delim("~/Documents/Vihervaara/hg19/overlapping_enhancers_He_60_min.bed", header=FALSE)
overlap_24h <- read.delim("~/Documents/Vihervaara/hg19/overlapping_enhancers_He_24h.bed", header=FALSE)
overlap_48h <- read.delim("~/Documents/Vihervaara/hg19/overlapping_enhancers_He_48h.bed", header=FALSE)
PRO_He0_eRPK <- read.delim("~/Documents/Vihervaara/hg19/enhancers/He0_eRPK.bed", header=FALSE)
PRO_He15_eRPK <- read.delim("~/Documents/Vihervaara/hg19/enhancers/He15_eRPK.bed", header=FALSE)
PRO_He30_eRPK <- read.delim("~/Documents/Vihervaara/hg19/enhancers/He30_eRPK.bed", header=FALSE)
PRO_He60_eRPK <- read.delim("~/Documents/Vihervaara/hg19/enhancers/He60_eRPK.bed", header=FALSE)
PRO_He24h_eRPK <- read.delim("~/Documents/Vihervaara/hg19/enhancers/He24h_eRPK.bed", header=FALSE)
PRO_He48h_eRPK <- read.delim("~/Documents/Vihervaara/hg19/enhancers/He48h_eRPK.bed", header=FALSE)
FANTOM5_0min <- FANTOM5_0min %>% mutate(V3 - V2)
FANTOM5_15min <- FANTOM5_15min %>% mutate(V3 - V2)
FANTOM5_30min <- FANTOM5_30min %>% mutate(V3 - V2)
FANTOM5_60min <- FANTOM5_60min %>% mutate(V3 - V2)
FANTOM5_24h <- FANTOM5_24h %>% mutate(V3 - V2)
FANTOM5_48h <- FANTOM5_48h %>% mutate(V3 - V2)
overlap_0min <- overlap_0min %>% mutate(V3 - V2)
overlap_15min <- overlap_15min %>% mutate(V3 - V2)
overlap_30min <- overlap_30min %>% mutate(V3 - V2)
overlap_60min <- overlap_60min %>% mutate(V3 - V2)
overlap_24h <- overlap_24h %>% mutate(V3 - V2)
overlap_48h <- overlap_48h %>% mutate(V3 - V2)
PRO_He0_eRPK <- PRO_He0_eRPK %>% mutate(V3 - V2)
PRO_He15_eRPK <- PRO_He15_eRPK %>% mutate(V3 - V2)
PRO_He30_eRPK <- PRO_He30_eRPK %>% mutate(V3 - V2)
PRO_He60_eRPK <- PRO_He60_eRPK %>% mutate(V3 - V2)
PRO_He24h_eRPK <- PRO_He24h_eRPK %>% mutate(V3 - V2)
PRO_He48h_eRPK <- PRO_He48h_eRPK %>% mutate(V3 - V2)
FANTOM5_0min <- FANTOM5_0min %>% mutate(time = "0 min", seq = "CAGE")
FANTOM5_15min <- FANTOM5_15min %>% mutate(time = "15 min", seq = "CAGE")
FANTOM5_30min <- FANTOM5_30min %>% mutate(time = "30 min", seq = "CAGE")
FANTOM5_60min <- FANTOM5_60min %>% mutate(time = "60 min", seq = "CAGE")
FANTOM5_24h <- FANTOM5_24h %>% mutate(time = "24 h", seq = "CAGE")
FANTOM5_48h <- FANTOM5_48h %>% mutate(time = "48 h", seq = "CAGE")
overlap_0min <- overlap_0min %>% mutate(time = "0 min", seq = "both")
overlap_15min <- overlap_15min %>% mutate(time = "15 min", seq = "both")
overlap_30min <- overlap_30min %>% mutate(time = "30 min", seq = "both")
overlap_60min <- overlap_60min %>% mutate(time = "60 min", seq = "both")
overlap_24h <- overlap_24h %>% mutate(time = "24 h", seq = "both")
overlap_48h <- overlap_48h %>% mutate(time = "48 h", seq = "both")
PRO_He0_eRPK <- PRO_He0_eRPK %>% mutate(time = "0 min", seq = "PRO")
PRO_He15_eRPK <- PRO_He15_eRPK %>% mutate(time = "15 min", seq = "PRO")
PRO_He30_eRPK <- PRO_He30_eRPK %>% mutate(time = "30 min", seq = "PRO")
PRO_He60_eRPK <- PRO_He60_eRPK %>% mutate(time = "60 min", seq = "PRO")
PRO_He24h_eRPK <- PRO_He24h_eRPK %>% mutate(time = "24 h", seq = "PRO")
PRO_He48h_eRPK <- PRO_He48h_eRPK %>% mutate(time = "48 h", seq = "PRO")
colnames(PRO_He0_eRPK) <- c("chr", "eStart", "eEnd", "RPK", "length", "time", "seq")
colnames(PRO_He15_eRPK) <- c("chr", "eStart", "eEnd", "RPK", "length", "time", "seq")
colnames(PRO_He30_eRPK) <- c("chr", "eStart", "eEnd", "RPK", "length", "time", "seq")
colnames(PRO_He60_eRPK) <- c("chr", "eStart", "eEnd", "RPK", "length", "time", "seq")
colnames(PRO_He24h_eRPK) <- c("chr", "eStart", "eEnd", "RPK", "length", "time", "seq")
colnames(PRO_He48h_eRPK) <- c("chr", "eStart", "eEnd", "RPK", "length", "time", "seq")
colnames(FANTOM5_0min) <- c("chr", "eStart", "eEnd", "RPK", "length", "time", "seq")
colnames(FANTOM5_15min) <- c("chr", "eStart", "eEnd", "RPK", "length", "time", "seq")
colnames(FANTOM5_30min) <- c("chr", "eStart", "eEnd", "RPK", "length", "time", "seq")
colnames(FANTOM5_60min) <- c("chr", "eStart", "eEnd", "RPK", "length", "time", "seq")
colnames(FANTOM5_24h) <- c("chr", "eStart", "eEnd", "RPK", "length", "time", "seq")
colnames(FANTOM5_48h) <- c("chr", "eStart", "eEnd", "RPK", "length", "time", "seq")
colnames(overlap_0min) <- c("chr_CAGE_seq", "eStart_CAGE_seq", "eEnd_CAGE_seq",
"RPK_CAGE_seq", "chr_PRO_seq", "eStart_PRO_seq",
"eEnd_PRO_seq", "name_PRO_seq", "RPK_PRO_seq",
"length_CAGE_seq", "time", "seq")
colnames(overlap_15min) <- c("chr_CAGE_seq", "eStart_CAGE_seq", "eEnd_CAGE_seq",
"RPK_CAGE_seq", "chr_PRO_seq", "eStart_PRO_seq",
"eEnd_PRO_seq", "name_PRO_seq", "RPK_PRO_seq",
"length_CAGE_seq", "time", "seq")
colnames(overlap_30min) <- c("chr_CAGE_seq", "eStart_CAGE_seq", "eEnd_CAGE_seq",
"RPK_CAGE_seq", "chr_PRO_seq", "eStart_PRO_seq",
"eEnd_PRO_seq", "name_PRO_seq", "RPK_PRO_seq",
"length_CAGE_seq", "time", "seq")
colnames(overlap_60min) <- c("chr_CAGE_seq", "eStart_CAGE_seq", "eEnd_CAGE_seq",
"RPK_CAGE_seq", "chr_PRO_seq", "eStart_PRO_seq",
"eEnd_PRO_seq", "name_PRO_seq", "RPK_PRO_seq",
"length_CAGE_seq", "time", "seq")
colnames(overlap_24h) <- c("chr_CAGE_seq", "eStart_CAGE_seq", "eEnd_CAGE_seq",
"RPK_CAGE_seq", "chr_PRO_seq", "eStart_PRO_seq",
"eEnd_PRO_seq", "name_PRO_seq", "RPK_PRO_seq",
"length_CAGE_seq", "time", "seq")
colnames(overlap_0min) <- c("chr_CAGE_seq", "eStart_CAGE_seq", "eEnd_CAGE_seq",
"RPK_CAGE_seq", "chr_PRO_seq", "eStart_PRO_seq",
"eEnd_PRO_seq", "name_PRO_seq", "RPK_PRO_seq",
"length_CAGE_seq", "time", "seq")
View(overlap_0min)
colnames(overlap_0min) <- c("chr_CAGE_seq", "eStart_CAGE_seq", "eEnd_CAGE_seq",
"RPK_CAGE_seq", "chr_PRO_seq", "eStart_PRO_seq",
"eEnd_PRO_seq", "RPK_PRO_seq",
"length_CAGE_seq", "time", "seq")
colnames(overlap_15min) <- c("chr_CAGE_seq", "eStart_CAGE_seq", "eEnd_CAGE_seq",
"RPK_CAGE_seq", "chr_PRO_seq", "eStart_PRO_seq",
"eEnd_PRO_seq", "name_PRO_seq", "RPK_PRO_seq",
"length_CAGE_seq", "time", "seq")
colnames(overlap_30min) <- c("chr_CAGE_seq", "eStart_CAGE_seq", "eEnd_CAGE_seq",
"RPK_CAGE_seq", "chr_PRO_seq", "eStart_PRO_seq",
"eEnd_PRO_seq", "name_PRO_seq", "RPK_PRO_seq",
"length_CAGE_seq", "time", "seq")
colnames(overlap_60min) <- c("chr_CAGE_seq", "eStart_CAGE_seq", "eEnd_CAGE_seq",
"RPK_CAGE_seq", "chr_PRO_seq", "eStart_PRO_seq",
"eEnd_PRO_seq", "name_PRO_seq", "RPK_PRO_seq",
"length_CAGE_seq", "time", "seq")
colnames(overlap_24h) <- c("chr_CAGE_seq", "eStart_CAGE_seq", "eEnd_CAGE_seq",
"RPK_CAGE_seq", "chr_PRO_seq", "eStart_PRO_seq",
"eEnd_PRO_seq", "name_PRO_seq", "RPK_PRO_seq",
"length_CAGE_seq", "time", "seq")
colnames(overlap_48h) <- c("chr_CAGE_seq", "eStart_CAGE_seq", "eEnd_CAGE_seq",
"RPK_CAGE_seq", "chr_PRO_seq", "eStart_PRO_seq",
"eEnd_PRO_seq", "name_PRO_seq", "RPK_PRO_seq",
"length_CAGE_seq", "time", "seq")
overlapping_enhancers <- bind_rows(overlap_0min, overlap_15min, overlap_30min, overlap_60min, overlap_24h, overlap_48h)
# Prepare the data
df <- overlapping_enhancers %>%
mutate(
time = factor(time, levels = c("0 min", "15 min", "30 min", "60 min", "24 h", "48 h")),
log_CAGE = log10(RPK_CAGE_seq),
log_PRO = log10(RPK_PRO_seq)
)
# Fit models and calculate R-squared AND AOV p-value per time group
stats_labels <- df %>%
group_by(time) %>%
do({
model = lm(log_PRO ~ log_CAGE, data = .)
r2 = summary(model)$r.squared
p_value = anova(model)$`Pr(>F)`[1]
# Format p-value
p_value_formatted <- ifelse(p_value < 0.001, "< 0.001", signif(p_value, 3))
data.frame(r2 = r2, p_value = p_value_formatted)
}) %>%
ungroup() %>%
mutate(
label = paste0("R² = ", round(r2, 3), "\n", "p = ", p_value),  # combine R² and p-value
x = Inf,
y = Inf
)
# Now plot
ggplot(df, aes(x = log_CAGE, y = log_PRO)) +
geom_point() +
geom_smooth(method = "lm", se = TRUE, color = "grey30") +
geom_text(
data = stats_labels,
aes(x = x, y = y, label = label),
hjust = 1.1, vjust = 1.1, inherit.aes = FALSE
) +
facet_wrap(~ time, nrow = 2) +
theme_minimal() +
labs(
x = "log10(CAGE-seq RPK)",
y = "log10(PRO-seq RPK)",
title = "Shared Enhancers, Hemin Treatments"
)
# Now plot
ggplot(df, aes(x = log_CAGE, y = log_PRO)) +
geom_point() +
geom_smooth(method = "lm", se = TRUE, color = "grey30") +
geom_text(
data = stats_labels,
aes(x = x, y = y, label = label),
hjust = 1.1, vjust = 1.1, inherit.aes = FALSE
) +
facet_wrap(~ time, nrow = 2) +
theme_minimal() +
labs(
x = "log10(CAGE-seq RPK)",
y = "log10(PRO-seq RPK)")
